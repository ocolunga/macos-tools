name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to simulate (e.g., 1.2.3)'
        required: true
        default: '0.0.0'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set version for manual run
        if: github.event_name == 'workflow_dispatch'
        run: echo "GITHUB_REF=refs/tags/v${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Generate changelog
        id: changelog
        run: |
          # Get the version
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Find the previous tag
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags --exclude=$(git describe --abbrev=0 --tags) 2>/dev/null || echo "")
          
          # Generate the changelog
          if [ -z "$PREVIOUS_TAG" ]; then
            # If no previous tag, use all commits
            CHANGELOG=$(git log --pretty=format:"* %s" | head -10)
          else
            # If there is a previous tag, use commits since then
            CHANGELOG=$(git log --pretty=format:"* %s" ${PREVIOUS_TAG}..HEAD)
          fi
          
          # Escape the changelog content for GitHub Actions
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT
          
          # Also save to a file for the release
          git log --pretty=format:"* %s" $(git describe --abbrev=0 --tags --exclude=$(git describe --abbrev=0 --tags) 2>/dev/null || echo "")..HEAD > CHANGELOG.md

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute SHA256 for Homebrew
        id: hash
        run: |
          FILENAME=$(ls dist/*.tar.gz)
          SHA=$(shasum -a 256 "$FILENAME" | awk '{print $1}')
          echo "sha=$SHA" >> $GITHUB_OUTPUT
          echo "file=$FILENAME" >> $GITHUB_OUTPUT

      - name: Clone Homebrew Tap
        run: |
          git clone https://x-access-token:${{ secrets.HOMEBREW_TAP_TOKEN }}@github.com/ocolunga/homebrew-mct.git tap
          cd tap
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Update Formula
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          URL="https://github.com/ocolunga/mct/archive/refs/tags/v${VERSION}.tar.gz"
          SHA="${{ steps.hash.outputs.sha }}"

          FORMULA_FILE="tap/Formula/mct.rb"

          # Update version, URL, and sha256 in the formula
          sed -i "s|url \".*\"|url \"$URL\"|" "$FORMULA_FILE"
          sed -i "s|sha256 \".*\"|sha256 \"$SHA\"|" "$FORMULA_FILE"
          
          # Print the changes for verification
          echo "Updated Formula:"
          cat "$FORMULA_FILE"

      - name: Commit and Push Formula Update
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          cd tap
          git add Formula/mct.rb
          git commit -m "Update formula to v${GITHUB_REF#refs/tags/v}"
          git push
